{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/dom.ts","webpack:///./src/main.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","createNode","tag","options","node","document","createElement","undefined","id","listeners","handler","entries","addEventListener","callback","addListeners","children","length","child","append","params","Node","addChildren","attributes","attributeName","setAttribute","addAttributes","textContent","html","innerHTML","addContent","classList","add","Array","filter","Boolean","addClasses","incrementScore","scores","playerName","scoreDisplay","oldScore","assert","newScore","set","Audio","play","condition","msg","Error","window","onload","addButton","getElementById","playerNameInput","playerListElement","list","input","Map","has","score","click","toString","makePlayerListItem"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","type EventNames = keyof HTMLElementEventMap\ninterface EventHandler<Event extends EventNames> {\n  readonly callback: (this: HTMLObjectElement, $event: HTMLElementEventMap[Event]) => unknown\n  readonly options?: boolean | EventListenerOptions\n}\n\nexport type NodeDefinition =\n  | readonly [keyof HTMLElementTagNameMap, NodeOptions]\n  | readonly [keyof HTMLElementTagNameMap]\n  | Node\n\nexport interface NodeOptions {\n  readonly id?: string\n  readonly classList?: string | readonly string[]\n  readonly textContent?: string | { readonly html: string }\n  readonly attributes?: { readonly [attributeName: string]: string }\n  readonly children?: readonly NodeDefinition[]\n  readonly listeners?: { readonly [Event in EventNames]?: EventHandler<Event> }\n}\n\nexport function createNode<Tag extends keyof HTMLElementTagNameMap>(\n  tag: Tag,\n  options?: NodeOptions,\n): HTMLElementTagNameMap[Tag] {\n  const node = document.createElement(tag)\n  if (options === undefined) {\n    return node\n  }\n  if (options.id) {\n    node.id = options.id\n  }\n  return addListeners(\n    addChildren(\n      addAttributes(addContent(addClasses(node, options.classList), options.textContent), options.attributes),\n      options.children,\n    ),\n    options.listeners,\n  )\n}\n\nexport function debounce<E extends Event, F extends ($event: E) => unknown>(\n  eventHandler: F,\n  milliseconds = 500,\n): ($event: E) => Promise<ReturnType<F>> {\n  let timer: ReturnType<typeof setTimeout> | undefined\n  return ($event: E) => {\n    return new Promise(resolve => {\n      if (timer !== undefined) {\n        clearTimeout(timer)\n      }\n      timer = setTimeout(() => resolve(eventHandler($event) as ReturnType<F>), milliseconds)\n    })\n  }\n}\n\ntype Entry = [EventNames, EventHandler<EventNames> | undefined]\n\nfunction addListeners<E extends HTMLElement>(node: E, listeners?: NodeOptions['listeners']): E {\n  if (listeners) {\n    for (const [name, handler] of Object.entries(listeners) as Entry[]) {\n      if (handler) {\n        node.addEventListener(name, handler.callback, handler.options)\n      }\n    }\n  }\n  return node\n}\n\nfunction addChildren<E extends HTMLElement>(node: E, children: NodeOptions['children']): E {\n  function makeChild(params: NodeDefinition) {\n    if (params instanceof Node) {\n      return params\n    }\n    return createNode(params[0], params[1])\n  }\n  if (children && children.length > 0) {\n    for (const child of children) {\n      node.append(makeChild(child))\n    }\n  }\n  return node\n}\n\nfunction addAttributes<E extends HTMLElement>(node: E, attributes: NodeOptions['attributes']): E {\n  if (attributes) {\n    for (const [attributeName, value] of Object.entries(attributes)) {\n      node.setAttribute(attributeName, value)\n    }\n  }\n  return node\n}\n\nfunction addContent<E extends HTMLElement>(node: E, textContent: NodeOptions['textContent']): E {\n  if (textContent) {\n    if (typeof textContent === 'string') {\n      node.textContent = textContent\n    } else if (textContent.html) {\n      node.innerHTML = textContent.html\n    }\n  }\n  return node\n}\n\nfunction addClasses<E extends HTMLElement>(node: E, classList: NodeOptions['classList']): E {\n  if (classList) {\n    if (typeof classList === 'string' && classList !== '') {\n      node.classList.add(classList)\n    }\n    if (classList instanceof Array) {\n      node.classList.add(...classList.filter(Boolean))\n    }\n  }\n  return node\n}\n","import { createNode } from 'dom'\n\nfunction main() {\n  const addButton = document.getElementById('add-player') as HTMLButtonElement | null\n  const playerNameInput = document.getElementById('player-name') as HTMLInputElement | null\n  const playerListElement = document.getElementById('player-list') as HTMLUListElement | null\n  assert(addButton)\n  assert(playerNameInput)\n  assert(playerListElement)\n  addButton.addEventListener('click', addPlayer(new Map(), playerListElement, playerNameInput))\n}\n\nfunction addPlayer(scores: Map<string, number>, list: HTMLUListElement, input: HTMLInputElement) {\n  return () => {\n    const playerName = input.value\n    if (playerName !== '' && !scores.has(playerName)) {\n      list.append(makePlayerListItem(playerName, scores))\n      input.value = ''\n    }\n  }\n}\n\nfunction makePlayerListItem(playerName: string, scores: Map<string, number>) {\n  scores.set(playerName, 0)\n  const score = createNode('span', { textContent: '0' })\n  return createNode('li', {\n    textContent: `${playerName} : `,\n    children: [\n      score,\n      [\n        'button',\n        {\n          textContent: '+1',\n          listeners: {\n            click: {\n              callback: incrementScore(scores, playerName, newScore => (score.textContent = newScore.toString())),\n            },\n          },\n        },\n      ],\n    ],\n  })\n}\n\nfunction incrementScore(scores: Map<string, number>, playerName: string, scoreDisplay: (newScore: number) => void) {\n  return () => {\n    const oldScore = scores.get(playerName)\n    assert(typeof oldScore === 'number')\n    const newScore = oldScore + 1\n    scores.set(playerName, newScore)\n    scoreDisplay(newScore)\n    new Audio('sounds/ding-sound-effect_2.mp3').play()\n  }\n}\n\nfunction assert(condition: unknown, msg?: string): asserts condition {\n  if (!condition) {\n    throw new Error(msg)\n  }\n}\n\nwindow.onload = main\n"],"sourceRoot":""}